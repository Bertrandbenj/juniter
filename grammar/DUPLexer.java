// Generated from DUP.g4 by ANTLR 4.7.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class DUPLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, Version=27, Curr=28, Blockstamp=29, Iss_=30, Signature_=31, 
		Timestamp_=32, Type_=33, Currency_=34, VersionHeader=35, UniqueIDHeader=36, 
		IdtyTimestampHeader=37, Issuer_=38, STR=39, INT=40, SIGNATURE=41, HASH=42, 
		PUBKEY=43, VERSION=44, CURRENCY=45, USERID=46, DOCTYPE=47, BUID=48, LP=49, 
		RP=50, WS=51, NL=52, COLON=53;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "Version", "Curr", "Blockstamp", "Iss_", "Signature_", "Timestamp_", 
		"Type_", "Currency_", "VersionHeader", "UniqueIDHeader", "IdtyTimestampHeader", 
		"Issuer_", "STR", "INT", "SIGNATURE", "HASH", "PUBKEY", "VERSION", "CURRENCY", 
		"USERID", "DOCTYPE", "BUID", "BASE58", "HEX", "CHAR", "BASE64", "LP", 
		"RP", "WS", "NL", "COLON"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'Block'", "'CertTimestamp'", "'CertTS'", "'Comment'", "'Endpoints'", 
		"'Idtyissuer'", "'Locktime'", "'IdtySignature'", "'Inputs'", "'Issuers'", 
		"'Membership'", "'Number'", "'Outputs'", "'PoWMin'", "'PublicKey'", "'Signatures'", 
		"'UserID'", "'Unlocks'", "'D'", "'T'", "'SIG'", "'XHX'", "'&&'", "'||'", 
		"'CSV'", "'CLTV'", null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "'('", "')'", "' '", "'\n'", "':'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, "Version", "Curr", "Blockstamp", "Iss_", "Signature_", 
		"Timestamp_", "Type_", "Currency_", "VersionHeader", "UniqueIDHeader", 
		"IdtyTimestampHeader", "Issuer_", "STR", "INT", "SIGNATURE", "HASH", "PUBKEY", 
		"VERSION", "CURRENCY", "USERID", "DOCTYPE", "BUID", "LP", "RP", "WS", 
		"NL", "COLON"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public DUPLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "DUP.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\67\u0228\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\3\2\3\2\3\2\3\2"+
		"\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3"+
		"\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6"+
		"\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3"+
		"\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t"+
		"\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3"+
		"\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r"+
		"\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17"+
		"\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20"+
		"\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22"+
		"\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24"+
		"\3\24\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30\3\30"+
		"\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34"+
		"\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\6\37\u014d\n\37\r\37\16"+
		"\37\u014e\3 \3 \5 \u0153\n \3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3\""+
		"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3"+
		"$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3&\3"+
		"&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'"+
		"\3\'\3\'\3\'\3\'\3(\6(\u01a9\n(\r(\16(\u01aa\3(\3(\6(\u01af\n(\r(\16("+
		"\u01b0\6(\u01b3\n(\r(\16(\u01b4\3)\3)\7)\u01b9\n)\f)\16)\u01bc\13)\3*"+
		"\6*\u01bf\n*\r*\16*\u01c0\3+\6+\u01c4\n+\r+\16+\u01c5\3,\6,\u01c9\n,\r"+
		",\16,\u01ca\3-\3-\3.\6.\u01d0\n.\r.\16.\u01d1\3/\6/\u01d5\n/\r/\16/\u01d6"+
		"\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60"+
		"\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60"+
		"\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60"+
		"\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60"+
		"\5\60\u0211\n\60\3\61\3\61\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65"+
		"\3\65\3\66\3\66\3\67\3\67\38\38\39\39\3:\3:\2\2;\3\3\5\4\7\5\t\6\13\7"+
		"\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"+
		")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O"+
		")Q*S+U,W-Y.[/]\60_\61a\62c\2e\2g\2i\2k\63m\64o\65q\66s\67\3\2\7\3\2\63"+
		";\3\2\62;\b\2\63;CJLPR\\cmo|\4\2\62;CH\7\2--\61;C\\aac|\2\u0233\2\3\3"+
		"\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2"+
		"\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3"+
		"\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2"+
		"%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61"+
		"\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2"+
		"\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I"+
		"\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2"+
		"\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2"+
		"\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\3u\3\2\2\2\5{"+
		"\3\2\2\2\7\u0089\3\2\2\2\t\u0090\3\2\2\2\13\u0098\3\2\2\2\r\u00a2\3\2"+
		"\2\2\17\u00ad\3\2\2\2\21\u00b6\3\2\2\2\23\u00c4\3\2\2\2\25\u00cb\3\2\2"+
		"\2\27\u00d3\3\2\2\2\31\u00de\3\2\2\2\33\u00e5\3\2\2\2\35\u00ed\3\2\2\2"+
		"\37\u00f4\3\2\2\2!\u00fe\3\2\2\2#\u0109\3\2\2\2%\u0110\3\2\2\2\'\u0118"+
		"\3\2\2\2)\u011a\3\2\2\2+\u011c\3\2\2\2-\u0120\3\2\2\2/\u0124\3\2\2\2\61"+
		"\u0127\3\2\2\2\63\u012a\3\2\2\2\65\u012e\3\2\2\2\67\u0133\3\2\2\29\u0137"+
		"\3\2\2\2;\u013b\3\2\2\2=\u014c\3\2\2\2?\u0150\3\2\2\2A\u0154\3\2\2\2C"+
		"\u0161\3\2\2\2E\u0169\3\2\2\2G\u0175\3\2\2\2I\u0180\3\2\2\2K\u018c\3\2"+
		"\2\2M\u019d\3\2\2\2O\u01a8\3\2\2\2Q\u01b6\3\2\2\2S\u01be\3\2\2\2U\u01c3"+
		"\3\2\2\2W\u01c8\3\2\2\2Y\u01cc\3\2\2\2[\u01cf\3\2\2\2]\u01d4\3\2\2\2_"+
		"\u0210\3\2\2\2a\u0212\3\2\2\2c\u0216\3\2\2\2e\u0218\3\2\2\2g\u021a\3\2"+
		"\2\2i\u021c\3\2\2\2k\u021e\3\2\2\2m\u0220\3\2\2\2o\u0222\3\2\2\2q\u0224"+
		"\3\2\2\2s\u0226\3\2\2\2uv\7D\2\2vw\7n\2\2wx\7q\2\2xy\7e\2\2yz\7m\2\2z"+
		"\4\3\2\2\2{|\7E\2\2|}\7g\2\2}~\7t\2\2~\177\7v\2\2\177\u0080\7V\2\2\u0080"+
		"\u0081\7k\2\2\u0081\u0082\7o\2\2\u0082\u0083\7g\2\2\u0083\u0084\7u\2\2"+
		"\u0084\u0085\7v\2\2\u0085\u0086\7c\2\2\u0086\u0087\7o\2\2\u0087\u0088"+
		"\7r\2\2\u0088\6\3\2\2\2\u0089\u008a\7E\2\2\u008a\u008b\7g\2\2\u008b\u008c"+
		"\7t\2\2\u008c\u008d\7v\2\2\u008d\u008e\7V\2\2\u008e\u008f\7U\2\2\u008f"+
		"\b\3\2\2\2\u0090\u0091\7E\2\2\u0091\u0092\7q\2\2\u0092\u0093\7o\2\2\u0093"+
		"\u0094\7o\2\2\u0094\u0095\7g\2\2\u0095\u0096\7p\2\2\u0096\u0097\7v\2\2"+
		"\u0097\n\3\2\2\2\u0098\u0099\7G\2\2\u0099\u009a\7p\2\2\u009a\u009b\7f"+
		"\2\2\u009b\u009c\7r\2\2\u009c\u009d\7q\2\2\u009d\u009e\7k\2\2\u009e\u009f"+
		"\7p\2\2\u009f\u00a0\7v\2\2\u00a0\u00a1\7u\2\2\u00a1\f\3\2\2\2\u00a2\u00a3"+
		"\7K\2\2\u00a3\u00a4\7f\2\2\u00a4\u00a5\7v\2\2\u00a5\u00a6\7{\2\2\u00a6"+
		"\u00a7\7k\2\2\u00a7\u00a8\7u\2\2\u00a8\u00a9\7u\2\2\u00a9\u00aa\7w\2\2"+
		"\u00aa\u00ab\7g\2\2\u00ab\u00ac\7t\2\2\u00ac\16\3\2\2\2\u00ad\u00ae\7"+
		"N\2\2\u00ae\u00af\7q\2\2\u00af\u00b0\7e\2\2\u00b0\u00b1\7m\2\2\u00b1\u00b2"+
		"\7v\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4\7o\2\2\u00b4\u00b5\7g\2\2\u00b5"+
		"\20\3\2\2\2\u00b6\u00b7\7K\2\2\u00b7\u00b8\7f\2\2\u00b8\u00b9\7v\2\2\u00b9"+
		"\u00ba\7{\2\2\u00ba\u00bb\7U\2\2\u00bb\u00bc\7k\2\2\u00bc\u00bd\7i\2\2"+
		"\u00bd\u00be\7p\2\2\u00be\u00bf\7c\2\2\u00bf\u00c0\7v\2\2\u00c0\u00c1"+
		"\7w\2\2\u00c1\u00c2\7t\2\2\u00c2\u00c3\7g\2\2\u00c3\22\3\2\2\2\u00c4\u00c5"+
		"\7K\2\2\u00c5\u00c6\7p\2\2\u00c6\u00c7\7r\2\2\u00c7\u00c8\7w\2\2\u00c8"+
		"\u00c9\7v\2\2\u00c9\u00ca\7u\2\2\u00ca\24\3\2\2\2\u00cb\u00cc\7K\2\2\u00cc"+
		"\u00cd\7u\2\2\u00cd\u00ce\7u\2\2\u00ce\u00cf\7w\2\2\u00cf\u00d0\7g\2\2"+
		"\u00d0\u00d1\7t\2\2\u00d1\u00d2\7u\2\2\u00d2\26\3\2\2\2\u00d3\u00d4\7"+
		"O\2\2\u00d4\u00d5\7g\2\2\u00d5\u00d6\7o\2\2\u00d6\u00d7\7d\2\2\u00d7\u00d8"+
		"\7g\2\2\u00d8\u00d9\7t\2\2\u00d9\u00da\7u\2\2\u00da\u00db\7j\2\2\u00db"+
		"\u00dc\7k\2\2\u00dc\u00dd\7r\2\2\u00dd\30\3\2\2\2\u00de\u00df\7P\2\2\u00df"+
		"\u00e0\7w\2\2\u00e0\u00e1\7o\2\2\u00e1\u00e2\7d\2\2\u00e2\u00e3\7g\2\2"+
		"\u00e3\u00e4\7t\2\2\u00e4\32\3\2\2\2\u00e5\u00e6\7Q\2\2\u00e6\u00e7\7"+
		"w\2\2\u00e7\u00e8\7v\2\2\u00e8\u00e9\7r\2\2\u00e9\u00ea\7w\2\2\u00ea\u00eb"+
		"\7v\2\2\u00eb\u00ec\7u\2\2\u00ec\34\3\2\2\2\u00ed\u00ee\7R\2\2\u00ee\u00ef"+
		"\7q\2\2\u00ef\u00f0\7Y\2\2\u00f0\u00f1\7O\2\2\u00f1\u00f2\7k\2\2\u00f2"+
		"\u00f3\7p\2\2\u00f3\36\3\2\2\2\u00f4\u00f5\7R\2\2\u00f5\u00f6\7w\2\2\u00f6"+
		"\u00f7\7d\2\2\u00f7\u00f8\7n\2\2\u00f8\u00f9\7k\2\2\u00f9\u00fa\7e\2\2"+
		"\u00fa\u00fb\7M\2\2\u00fb\u00fc\7g\2\2\u00fc\u00fd\7{\2\2\u00fd \3\2\2"+
		"\2\u00fe\u00ff\7U\2\2\u00ff\u0100\7k\2\2\u0100\u0101\7i\2\2\u0101\u0102"+
		"\7p\2\2\u0102\u0103\7c\2\2\u0103\u0104\7v\2\2\u0104\u0105\7w\2\2\u0105"+
		"\u0106\7t\2\2\u0106\u0107\7g\2\2\u0107\u0108\7u\2\2\u0108\"\3\2\2\2\u0109"+
		"\u010a\7W\2\2\u010a\u010b\7u\2\2\u010b\u010c\7g\2\2\u010c\u010d\7t\2\2"+
		"\u010d\u010e\7K\2\2\u010e\u010f\7F\2\2\u010f$\3\2\2\2\u0110\u0111\7W\2"+
		"\2\u0111\u0112\7p\2\2\u0112\u0113\7n\2\2\u0113\u0114\7q\2\2\u0114\u0115"+
		"\7e\2\2\u0115\u0116\7m\2\2\u0116\u0117\7u\2\2\u0117&\3\2\2\2\u0118\u0119"+
		"\7F\2\2\u0119(\3\2\2\2\u011a\u011b\7V\2\2\u011b*\3\2\2\2\u011c\u011d\7"+
		"U\2\2\u011d\u011e\7K\2\2\u011e\u011f\7I\2\2\u011f,\3\2\2\2\u0120\u0121"+
		"\7Z\2\2\u0121\u0122\7J\2\2\u0122\u0123\7Z\2\2\u0123.\3\2\2\2\u0124\u0125"+
		"\7(\2\2\u0125\u0126\7(\2\2\u0126\60\3\2\2\2\u0127\u0128\7~\2\2\u0128\u0129"+
		"\7~\2\2\u0129\62\3\2\2\2\u012a\u012b\7E\2\2\u012b\u012c\7U\2\2\u012c\u012d"+
		"\7X\2\2\u012d\64\3\2\2\2\u012e\u012f\7E\2\2\u012f\u0130\7N\2\2\u0130\u0131"+
		"\7V\2\2\u0131\u0132\7X\2\2\u0132\66\3\2\2\2\u0133\u0134\5G$\2\u0134\u0135"+
		"\5Y-\2\u0135\u0136\5q9\2\u01368\3\2\2\2\u0137\u0138\5E#\2\u0138\u0139"+
		"\5[.\2\u0139\u013a\5q9\2\u013a:\3\2\2\2\u013b\u013c\7D\2\2\u013c\u013d"+
		"\7n\2\2\u013d\u013e\7q\2\2\u013e\u013f\7e\2\2\u013f\u0140\7m\2\2\u0140"+
		"\u0141\7u\2\2\u0141\u0142\7v\2\2\u0142\u0143\7c\2\2\u0143\u0144\7o\2\2"+
		"\u0144\u0145\7r\2\2\u0145\u0146\3\2\2\2\u0146\u0147\5s:\2\u0147\u0148"+
		"\5o8\2\u0148\u0149\5Q)\2\u0149\u014a\5q9\2\u014a<\3\2\2\2\u014b\u014d"+
		"\5c\62\2\u014c\u014b\3\2\2\2\u014d\u014e\3\2\2\2\u014e\u014c\3\2\2\2\u014e"+
		"\u014f\3\2\2\2\u014f>\3\2\2\2\u0150\u0152\5S*\2\u0151\u0153\5q9\2\u0152"+
		"\u0151\3\2\2\2\u0152\u0153\3\2\2\2\u0153@\3\2\2\2\u0154\u0155\7V\2\2\u0155"+
		"\u0156\7k\2\2\u0156\u0157\7o\2\2\u0157\u0158\7g\2\2\u0158\u0159\7u\2\2"+
		"\u0159\u015a\7v\2\2\u015a\u015b\7c\2\2\u015b\u015c\7o\2\2\u015c\u015d"+
		"\7r\2\2\u015d\u015e\3\2\2\2\u015e\u015f\5s:\2\u015f\u0160\5o8\2\u0160"+
		"B\3\2\2\2\u0161\u0162\7V\2\2\u0162\u0163\7{\2\2\u0163\u0164\7r\2\2\u0164"+
		"\u0165\7g\2\2\u0165\u0166\3\2\2\2\u0166\u0167\5s:\2\u0167\u0168\5o8\2"+
		"\u0168D\3\2\2\2\u0169\u016a\7E\2\2\u016a\u016b\7w\2\2\u016b\u016c\7t\2"+
		"\2\u016c\u016d\7t\2\2\u016d\u016e\7g\2\2\u016e\u016f\7p\2\2\u016f\u0170"+
		"\7e\2\2\u0170\u0171\7{\2\2\u0171\u0172\3\2\2\2\u0172\u0173\5s:\2\u0173"+
		"\u0174\5o8\2\u0174F\3\2\2\2\u0175\u0176\7X\2\2\u0176\u0177\7g\2\2\u0177"+
		"\u0178\7t\2\2\u0178\u0179\7u\2\2\u0179\u017a\7k\2\2\u017a\u017b\7q\2\2"+
		"\u017b\u017c\7p\2\2\u017c\u017d\3\2\2\2\u017d\u017e\5s:\2\u017e\u017f"+
		"\5o8\2\u017fH\3\2\2\2\u0180\u0181\7W\2\2\u0181\u0182\7p\2\2\u0182\u0183"+
		"\7k\2\2\u0183\u0184\7s\2\2\u0184\u0185\7w\2\2\u0185\u0186\7g\2\2\u0186"+
		"\u0187\7K\2\2\u0187\u0188\7F\2\2\u0188\u0189\3\2\2\2\u0189\u018a\5s:\2"+
		"\u018a\u018b\5o8\2\u018bJ\3\2\2\2\u018c\u018d\7K\2\2\u018d\u018e\7f\2"+
		"\2\u018e\u018f\7v\2\2\u018f\u0190\7{\2\2\u0190\u0191\7V\2\2\u0191\u0192"+
		"\7k\2\2\u0192\u0193\7o\2\2\u0193\u0194\7g\2\2\u0194\u0195\7u\2\2\u0195"+
		"\u0196\7v\2\2\u0196\u0197\7c\2\2\u0197\u0198\7o\2\2\u0198\u0199\7r\2\2"+
		"\u0199\u019a\3\2\2\2\u019a\u019b\5s:\2\u019b\u019c\5o8\2\u019cL\3\2\2"+
		"\2\u019d\u019e\7K\2\2\u019e\u019f\7u\2\2\u019f\u01a0\7u\2\2\u01a0\u01a1"+
		"\7w\2\2\u01a1\u01a2\7g\2\2\u01a2\u01a3\7t\2\2\u01a3\u01a4\3\2\2\2\u01a4"+
		"\u01a5\5s:\2\u01a5\u01a6\5o8\2\u01a6N\3\2\2\2\u01a7\u01a9\5g\64\2\u01a8"+
		"\u01a7\3\2\2\2\u01a9\u01aa\3\2\2\2\u01aa\u01a8\3\2\2\2\u01aa\u01ab\3\2"+
		"\2\2\u01ab\u01b2\3\2\2\2\u01ac\u01ae\7\"\2\2\u01ad\u01af\5g\64\2\u01ae"+
		"\u01ad\3\2\2\2\u01af\u01b0\3\2\2\2\u01b0\u01ae\3\2\2\2\u01b0\u01b1\3\2"+
		"\2\2\u01b1\u01b3\3\2\2\2\u01b2\u01ac\3\2\2\2\u01b3\u01b4\3\2\2\2\u01b4"+
		"\u01b2\3\2\2\2\u01b4\u01b5\3\2\2\2\u01b5P\3\2\2\2\u01b6\u01ba\t\2\2\2"+
		"\u01b7\u01b9\t\3\2\2\u01b8\u01b7\3\2\2\2\u01b9\u01bc\3\2\2\2\u01ba\u01b8"+
		"\3\2\2\2\u01ba\u01bb\3\2\2\2\u01bbR\3\2\2\2\u01bc\u01ba\3\2\2\2\u01bd"+
		"\u01bf\5i\65\2\u01be\u01bd\3\2\2\2\u01bf\u01c0\3\2\2\2\u01c0\u01be\3\2"+
		"\2\2\u01c0\u01c1\3\2\2\2\u01c1T\3\2\2\2\u01c2\u01c4\5e\63\2\u01c3\u01c2"+
		"\3\2\2\2\u01c4\u01c5\3\2\2\2\u01c5\u01c3\3\2\2\2\u01c5\u01c6\3\2\2\2\u01c6"+
		"V\3\2\2\2\u01c7\u01c9\5c\62\2\u01c8\u01c7\3\2\2\2\u01c9\u01ca\3\2\2\2"+
		"\u01ca\u01c8\3\2\2\2\u01ca\u01cb\3\2\2\2\u01cbX\3\2\2\2\u01cc\u01cd\5"+
		"Q)\2\u01cdZ\3\2\2\2\u01ce\u01d0\5i\65\2\u01cf\u01ce\3\2\2\2\u01d0\u01d1"+
		"\3\2\2\2\u01d1\u01cf\3\2\2\2\u01d1\u01d2\3\2\2\2\u01d2\\\3\2\2\2\u01d3"+
		"\u01d5\5g\64\2\u01d4\u01d3\3\2\2\2\u01d5\u01d6\3\2\2\2\u01d6\u01d4\3\2"+
		"\2\2\u01d6\u01d7\3\2\2\2\u01d7^\3\2\2\2\u01d8\u01d9\7K\2\2\u01d9\u01da"+
		"\7f\2\2\u01da\u01db\7g\2\2\u01db\u01dc\7p\2\2\u01dc\u01dd\7v\2\2\u01dd"+
		"\u01de\7k\2\2\u01de\u01df\7v\2\2\u01df\u0211\7{\2\2\u01e0\u01e1\7E\2\2"+
		"\u01e1\u01e2\7g\2\2\u01e2\u01e3\7t\2\2\u01e3\u01e4\7v\2\2\u01e4\u01e5"+
		"\7k\2\2\u01e5\u01e6\7h\2\2\u01e6\u01e7\7k\2\2\u01e7\u01e8\7e\2\2\u01e8"+
		"\u01e9\7c\2\2\u01e9\u01ea\7v\2\2\u01ea\u01eb\7k\2\2\u01eb\u01ec\7q\2\2"+
		"\u01ec\u0211\7p\2\2\u01ed\u01ee\7O\2\2\u01ee\u01ef\7g\2\2\u01ef\u01f0"+
		"\7o\2\2\u01f0\u01f1\7d\2\2\u01f1\u01f2\7g\2\2\u01f2\u01f3\7t\2\2\u01f3"+
		"\u01f4\7u\2\2\u01f4\u01f5\7j\2\2\u01f5\u01f6\7k\2\2\u01f6\u0211\7r\2\2"+
		"\u01f7\u01f8\7T\2\2\u01f8\u01f9\7g\2\2\u01f9\u01fa\7x\2\2\u01fa\u01fb"+
		"\7q\2\2\u01fb\u01fc\7e\2\2\u01fc\u01fd\7c\2\2\u01fd\u01fe\7v\2\2\u01fe"+
		"\u01ff\7k\2\2\u01ff\u0200\7q\2\2\u0200\u0211\7p\2\2\u0201\u0202\7R\2\2"+
		"\u0202\u0203\7g\2\2\u0203\u0204\7g\2\2\u0204\u0211\7t\2\2\u0205\u0206"+
		"\7V\2\2\u0206\u0207\7t\2\2\u0207\u0208\7c\2\2\u0208\u0209\7p\2\2\u0209"+
		"\u020a\7u\2\2\u020a\u020b\7c\2\2\u020b\u020c\7e\2\2\u020c\u020d\7v\2\2"+
		"\u020d\u020e\7k\2\2\u020e\u020f\7q\2\2\u020f\u0211\7p\2\2\u0210\u01d8"+
		"\3\2\2\2\u0210\u01e0\3\2\2\2\u0210\u01ed\3\2\2\2\u0210\u01f7\3\2\2\2\u0210"+
		"\u0201\3\2\2\2\u0210\u0205\3\2\2\2\u0211`\3\2\2\2\u0212\u0213\5Q)\2\u0213"+
		"\u0214\7/\2\2\u0214\u0215\5U+\2\u0215b\3\2\2\2\u0216\u0217\t\4\2\2\u0217"+
		"d\3\2\2\2\u0218\u0219\t\5\2\2\u0219f\3\2\2\2\u021a\u021b\5i\65\2\u021b"+
		"h\3\2\2\2\u021c\u021d\t\6\2\2\u021dj\3\2\2\2\u021e\u021f\7*\2\2\u021f"+
		"l\3\2\2\2\u0220\u0221\7+\2\2\u0221n\3\2\2\2\u0222\u0223\7\"\2\2\u0223"+
		"p\3\2\2\2\u0224\u0225\7\f\2\2\u0225r\3\2\2\2\u0226\u0227\7<\2\2\u0227"+
		"t\3\2\2\2\17\2\u014e\u0152\u01aa\u01b0\u01b4\u01ba\u01c0\u01c5\u01ca\u01d1"+
		"\u01d6\u0210\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}