buildscript {
    repositories {
        mavenCentral()
        // mavenLocal()
        // maven { url "https://plugins.gradle.org/m2/" }
        // maven { url 'http://repo.spring.io/plugins-release' }
        // jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE")
//        classpath 'org.apache.maven:maven-artifact:2.2.1'
        classpath "org.apache.avro:avro-compiler:1.7.2"
//        classpath "org.apache.avro:avro-gradle-plugin:1.7.2"
//        classpath "org.apache.avro:gradle-avro-plugin:1.7.2"
        //classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.9.1"
        classpath "io.franzbecker:gradle-lombok:1.7"
    }

}

plugins {

    id "com.commercehub.gradle.plugin.avro" version "0.9.1" 
    id 'io.franzbecker.gradle-lombok' version '1.8'
    id 'maven-publish'
}


apply plugin: "java"
apply plugin: 'antlr'
//apply plugin: 'avro-gradle-plugin'
apply plugin: "com.commercehub.gradle.plugin.avro"

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


 

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()

}

configurations {

    all*.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    all*.exclude group: "ch.qos.logback"
    all*.exclude group: "org.slf4j", module: "log4j-over-slf4j" // allow using log4j 2.x
    all*.exclude group: "org.slf4j", module: "slf4j-simple"     // log4j is the configured backend

    all*.exclude group: "com.github.multiformats", module: "java-multibase"
    all*.exclude group: "com.github.multiformats", module: "java-multihash"
    all*.exclude group: "com.github.multiformats", module: "java-multiaddr"
    all*.exclude group: "com.github.ipld", module: "cid"

    provided

    compile.extendsFrom = extendsFrom.findAll { it != configurations.antlr }

}

bootJar {
    enabled = false
}

//jar {
//    enabled = true
//}


generateGrammarSource {
    arguments << "-visitor" << "-lib" << "src/main/antlr"
    outputDirectory = new File(projectDir.toString() + "/src/main/generated/juniter/antlr".toString())
    maxHeapSize = "64m"
}


task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {

    def srcAvro = "${projectDir}/src/main/avro"
    def destAvro = "${projectDir}/src/main/generated"

    println "Generate Avro"
    println "Sources from " + srcAvro
    println "Destination  " + destAvro

    source(srcAvro)
    outputDir = file(destAvro)
    //compileJava.source(destAvro)

}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    //from javadoc
    classifier = 'javadoc'
}

new File("docs/javadoc").mkdirs()

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
    destinationDir = new File("docs/javadoc") // inside of build
}


apply plugin: 'io.franzbecker.gradle-lombok'
//apply plugin: 'net.ltgt.apt'



//// Delombok Task
//task delombok( type: DelombokTask ) {
//    description = 'Generates delomboked source.'
//
//    sourceSets.all {
//        if ( it.name != SourceSet.TEST_SOURCE_SET_NAME ) {
//            it.allJava.srcDirs.each {
//                args( it, '-d', "${buildDir}/${delombok.name}" )
//            }
//        }
//    }
//}

dependencies {
    // PRE COMPILE
    compile  'org.projectlombok:lombok:1.18.4'
    annotationProcessor 'org.projectlombok:lombok:1.18.4'
    antlr "org.antlr:antlr4:4.7.1"
//    apt "org.projectlombok:lombok:1.18.4"

    testCompile group: 'junit', name: 'junit', version: '4.12'
    compileOnly 'org.projectlombok:lombok:1.18.4'


    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }
    compile("org.springframework.boot:spring-boot-starter-actuator") {
        exclude module: "logback-classic"
    }

    //compile("org.springframework.boot:spring-boot-starter-web")	
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.data:spring-data-rest-webmvc")
    compile("org.springframework.boot:spring-boot-configuration-processor")
    compile("org.springframework.boot:spring-boot-starter-freemarker")
    compile("org.springframework.boot:spring-boot-starter-websocket")

    compile group: 'com.graphql-java', name: 'graphql-spring-boot-starter', version: '5.0.2'
    compile group: 'com.graphql-java', name: 'graphql-java', version: '8.0'
    compile group: 'com.graphql-java', name: 'graphql-spring-boot-autoconfigure', version: '5.0.2'
    compile group: 'com.graphql-java', name: 'graphql-java-servlet', version: '6.1.3'
    compile("com.graphql-java:graphiql-spring-boot-starter:3.6.0")
    compile("io.leangen.graphql:spqr:0.9.7")
    compile 'org.springframework.boot:spring-boot-starter-mail:2.0.1.RELEASE'


//websocket client
    compile "org.java-websocket:Java-WebSocket:1.4.0"

    //compile 'javax.websocket:javax.websocket-api:1.1'
    //compile "com.google.code.gson:gson:2.8.5"

    compile("org.springframework:spring-web")
    compile("org.springframework:spring-webmvc")
    compile("org.springframework:spring-context-support")

    // Server stuff
    compile("org.apache.httpcomponents:httpcore")
    compile("javax.servlet:javax.servlet-api")
    compile("commons-codec:commons-codec")
    compile("org.antlr:antlr4-runtime:4.7.1")
    compile("org.apache.logging.log4j:log4j-core")
    runtime "org.postgresql:postgresql"
    compile("io.reactivex.rxjava2:rxjava:2.2.6")

    compile("javax.xml.bind:jaxb-api")
    compile("org.modelmapper:modelmapper:2.1.0")

    // front dependencies 
    compile("de.neuland-bfi:spring-jade4j:1.2.5")
    //compile("com.github.instaweb:spring-boot-jade:0.9.0-SNAPSHOT")
    compile("org.freemarker:freemarker")
    compile("javax.servlet:jstl")
    compile("org.webjars:bootstrap:3.3.7")
    compile("org.webjars:stomp-websocket:2.3.3")
    compile("org.webjars:webjars-locator-core")
    compile("org.webjars:sockjs-client:1.0.2")
    compile("org.webjars:jquery:3.1.0")
    compile("com.lambdaworks:scrypt:1.4.0")
    compile("com.github.jnr:jnr-ffi:2.1.0")

    //  compile files(projectDir.toString() + "/../lib/kalium-0.5.0_blavenie.jar".toString())
    compile group: 'org.abstractj.kalium', name: 'kalium', version: '0.8.0'

    // https://mvnrepository.com/artifact/org.apache.avro/avro
    compile group: 'org.apache.avro', name: 'avro', version: '1.9.1'

    // TESTS
    testCompile("junit:junit")
    testCompile("com.h2database:h2")
    testCompile("org.apache.httpcomponents:httpclient")
    testCompile("org.springframework.boot:spring-boot-starter-test")


    // MONITORING MEASUREMENT
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'io.micrometer:micrometer-core'
    compile 'io.micrometer:micrometer-registry-prometheus'
    //compile 'io.micrometer:micrometer-registry-atlas:1.3.2'
    compile 'de.codecentric:spring-boot-admin-starter-client:2.1.1'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'com.ryantenney.metrics:metrics-spring:3.1.3'


//    // Jena
//    //This will transitively resolve all the dependencies for you: jena-core, jena-arq, jena-tdb and jena-iri and their dependencies.
    compile(group: 'org.apache.jena', name: 'apache-jena-libs', version: '3.10.0') { // , ext: 'pom'
        exclude module: "logback-classic"

    }
//    //compile group: 'org.apache.jena', name: 'jena-arq', version: '3.10.0'
//    //compile 'org.apache.jena:jena-fuseki-main:3.10.0'
//    compile ('org.apache.jena:jena-sdb:3.10.0' ){
//        exclude module: "logback-classic"
//
//    }
//    //testCompile group: 'org.apache.jena', name: 'jena-fuseki-embedded', version: '3.8.0'
//
    compile group: 'org.reflections', name: 'reflections', version: '0.9.11'


    // testing hadoop
    compile group: 'org.springframework.data', name: 'spring-data-hadoop', version: '2.5.0.RELEASE'
    compile group: 'org.apache.hbase', name: 'hbase-client', version: '1.5.0'

    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'
    //compile 'io.springfox:springfox-data-rest:2.9.2'
    ////compile 'io.springfox:springfox-bean-validators:2.8.0

    // CACHING 
    compile 'com.github.ben-manes.caffeine:caffeine:2.5.5'

    //compile "org.xerial:sqlite-jdbc:3.23.1"


    compile 'org.javassist:javassist:3.23.1-GA'
    // https://stackoverflow.com/questions/18125587/hibernate-mapping-exception-could-not-get-constructor-for-org-hibernate-entity

    // hsql

    runtime 'org.hsqldb:hsqldb:2.4.0'
    //compile 'org.springframework.boot:spring-boot-starter-jetty'


    // IPFS
//    compile 'com.github.ipfs:java-ipfs-http-client:1.2.3'
//    compile 'com.github.multiformats:java-multibase:v1.0.1'
//    compile 'com.github.multiformats:java-multihash:v1.0.0'
//    compile 'com.github.multiformats:java-multiaddr:v1.3.1'
//    compile 'com.github.ipld:java-cid:v1.1.1'

    compile files(projectDir.toString() + "/../lib/multihash.jar".toString())
    compile files(projectDir.toString() + "/../lib/multibase.jar".toString())
    compile files(projectDir.toString() + "/../lib/multiaddr.jar".toString())
    compile files(projectDir.toString() + "/../lib/cid.jar".toString())


    compile group: 'com.github.ipfs', name: 'java-ipfs-http-client', version: '1.2.3'
}




publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'juniter'
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
    repositories {
        maven {
            url 'repo'
        }
        mavenLocal()
    }
}










